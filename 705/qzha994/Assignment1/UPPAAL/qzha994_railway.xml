<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int TrNum=3;//trace number
int gateState = 2;//the state for every train,0 means closed 1 means open, 2means off, 3 means on
int lightState = 0;//the state for light, 0 means red, 1 means yellow, 2 means green,3 means turning 
typedef  int[0,TrNum-1] trainId;// trainId;
chan appr[3],cross[3],leave[3];//action of train 
urgent chan turnR;// light states to turn red immediately 
urgent chan turnG; // light states to turn green immediately
urgent chan open; // gate states to turn open immediately
urgent chan close;// // gate states to turn close immediately


</declaration>
	<template>
		<name x="9" y="9">Train</name>
		<parameter>const trainId myid</parameter>
		<declaration>// Place local declarations here.
clock x;</declaration>
		<location id="id0" x="-76" y="-25" color="#00ff00">
			<name x="-85" y="-59">Cross</name>
			<label kind="invariant" x="-85" y="-8">x&lt;=30</label>
		</location>
		<location id="id1" x="-229" y="-212" color="#ff0000">
			<name x="-238" y="-246">Appr</name>
			<label kind="invariant" x="-280" y="-238">x&lt;=30</label>
		</location>
		<location id="id2" x="-348" y="-34">
			<name x="-357" y="-68">idle</name>
		</location>
		<init ref="id2"/>
		<transition color="#ffa500">
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-331" y="-136">appr[myid]!</label>
			<label kind="assignment" x="-331" y="-119">x=0</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-238" y="-25">x&gt;=15</label>
			<label kind="synchronisation" x="-238" y="-8">leave[myid]!</label>
			<label kind="assignment" x="-238" y="9">x=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-153" y="-187">x&gt;=15</label>
			<label kind="assignment" x="-153" y="-153">x=0</label>
		</transition>
	</template>
	<template>
		<name>Gate</name>
		<declaration>clock x;
int isInter=0;</declaration>
		<location id="id3" x="93" y="-416" color="#00ff00">
			<name x="119" y="-450">stayOn</name>
			<label kind="comments" x="76" y="-493">if there is not this state, the gate will wait so that light will not turn green.</label>
		</location>
		<location id="id4" x="-144" y="-119">
			<label kind="invariant" x="-153" y="-102">x&lt;=5</label>
		</location>
		<location id="id5" x="-8" y="-76">
			<committed/>
		</location>
		<location id="id6" x="-459" y="-391" color="#ffff00">
			<name x="-467" y="-425">closing</name>
			<label kind="invariant" x="-467" y="-374">x&lt;=5</label>
		</location>
		<location id="id7" x="-637" y="-110" color="#ff0000">
			<name x="-646" y="-144">Off</name>
		</location>
		<location id="id8" x="-204" y="-34" color="#ffff00">
			<name x="-212" y="9">opening</name>
			<label kind="invariant" x="-212" y="-17">x&lt;=5</label>
			<label kind="comments" x="-229" y="34">If a train comes when gate is turning on, the variable "isInter" will store this event.</label>
		</location>
		<location id="id9" x="-34" y="-221" color="#00ff00">
			<name x="-42" y="-255">On</name>
			<committed/>
		</location>
		<init ref="id7"/>
		<transition color="#ffa500">
			<source ref="id3"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-442" y="-518">close?</label>
			<label kind="assignment" x="-442" y="-501">x=0,
gateState=0</label>
			<nail x="43" y="-620"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id9"/>
			<label kind="assignment" x="-17" y="-255">x=0</label>
			<nail x="85" y="-297"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id3"/>
			<label kind="guard" x="-17" y="-348">isInter==0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="guard" x="-85" y="-391">isInter==1</label>
			<label kind="assignment" x="-85" y="-357">isInter=0</label>
			<nail x="-102" y="-501"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id9"/>
			<label kind="guard" x="-127" y="-204">x&gt;=5</label>
			<label kind="assignment" x="-127" y="-170">x=0</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-229" y="-110">close?</label>
			<label kind="assignment" x="-170" y="-76">isInter=1</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-348" y="-306">close?</label>
			<label kind="assignment" x="-348" y="-289">x=0,
gateState=0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id9"/>
			<label kind="guard" x="204" y="-272">lightState!=0</label>
			<label kind="assignment" x="204" y="-238">x=0,
gateState=3</label>
			<nail x="221" y="-178"/>
			<nail x="170" y="-280"/>
		</transition>
		<transition color="#0000ff">
			<source ref="id5"/>
			<target ref="id9"/>
			<label kind="guard" x="-17" y="-178">lightState==0</label>
			<label kind="synchronisation" x="-17" y="-161">turnG!</label>
			<label kind="assignment" x="-17" y="-144">x=0,
gateState=3</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id5"/>
			<label kind="guard" x="-119" y="-25">x==5</label>
			<label kind="assignment" x="-119" y="-8">x=0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="-620" y="-280">x==5</label>
			<label kind="assignment" x="-620" y="-246">x=0,
gateState=2</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-799" y="-76">close?</label>
			<label kind="assignment" x="-799" y="-59">gateState=2</label>
			<nail x="-816" y="-8"/>
			<nail x="-637" y="51"/>
		</transition>
		<transition color="#ffa500">
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-391" y="-51">open?</label>
			<label kind="assignment" x="-391" y="-25">x=0,
gateState=1</label>
		</transition>
	</template>
	<template>
		<name>Control</name>
		<declaration>int [0,TrNum] num;</declaration>
		<location id="id10" x="-382" y="-212">
			<committed/>
		</location>
		<location id="id11" x="187" y="128">
			<committed/>
		</location>
		<location id="id12" x="34" y="-178" color="#00ff00">
			<name x="-42" y="-212">Passing</name>
			<label kind="comments" x="85" y="-187">It will stay in this state until to train is on the railway.</label>
		</location>
		<location id="id13" x="-399" y="-34">
			<label kind="comments" x="-884" y="-119">whether turning the state of Gate or Light depending on their current state.</label>
			<committed/>
		</location>
		<location id="id14" x="-612" y="153" color="#ff0000">
			<name x="-620" y="119">Ready</name>
		</location>
		<init ref="id14"/>
		<transition color="#0000ff">
			<source ref="id11"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-170" y="102">open!</label>
		</transition>
		<transition color="#0000ff">
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-365" y="-212">close!</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id10"/>
			<label kind="guard" x="-391" y="-153">lightState==0</label>
		</transition>
		<transition color="#0000ff">
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-238" y="-68">lightState!=0</label>
			<label kind="synchronisation" x="-221" y="-42">turnR!</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="select" x="17" y="-153">e:trainId</label>
			<label kind="guard" x="17" y="-136">num==1</label>
			<label kind="synchronisation" x="17" y="-119">leave[e]?</label>
			<label kind="assignment" x="17" y="-102">num--</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="select" x="128" y="-357">e:trainId</label>
			<label kind="guard" x="128" y="-340">num&gt;=2</label>
			<label kind="synchronisation" x="128" y="-323">leave[e]?</label>
			<label kind="assignment" x="128" y="-306">num--</label>
			<nail x="85" y="-382"/>
			<nail x="145" y="-238"/>
		</transition>
		<transition color="#ffa500">
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="select" x="-161" y="-425">e:trainId</label>
			<label kind="guard" x="-161" y="-408">num&gt;0</label>
			<label kind="synchronisation" x="-161" y="-391">appr[e]?</label>
			<label kind="assignment" x="-161" y="-374">num++</label>
			<nail x="-34" y="-357"/>
			<nail x="-195" y="-340"/>
		</transition>
		<transition color="#ffa500">
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="select" x="-578" y="17">e:trainId</label>
			<label kind="synchronisation" x="-578" y="51">appr[e]?</label>
			<label kind="assignment" x="-578" y="68">num++</label>
		</transition>
	</template>
	<template>
		<name>Light</name>
		<declaration>clock x;</declaration>
		<location id="id15" x="-289" y="-119">
			<label kind="invariant" x="-297" y="-102">x&lt;=2</label>
			<label kind="comments" x="-263" y="-144">Every turning period will last 2 seconds.</label>
		</location>
		<location id="id16" x="-561" y="-102">
			<committed/>
		</location>
		<location id="id17" x="-782" y="-399">
			<committed/>
		</location>
		<location id="id18" x="-518" y="-382">
			<name x="-527" y="-416">turningG</name>
			<label kind="invariant" x="-527" y="-365">x&lt;=2</label>
			<label kind="comments" x="-765" y="-459">turningG means light is turning from Red to Green. Once it receive turnR? it will not turn Green, but return Red.</label>
		</location>
		<location id="id19" x="-476" y="-51" color="#ffff00">
			<name x="-484" y="-85">yellow</name>
			<label kind="invariant" x="-484" y="-25">x&lt;=2</label>
		</location>
		<location id="id20" x="-289" y="-238" color="#00ff00">
			<name x="-297" y="-272">green</name>
		</location>
		<location id="id21" x="-714" y="-178" color="#ff0000">
			<name x="-722" y="-212">red</name>
		</location>
		<init ref="id21"/>
		<transition>
			<source ref="id18"/>
			<target ref="id20"/>
			<label kind="guard" x="-382" y="-399">x==2</label>
			<label kind="assignment" x="-382" y="-365">x=0,
lightState=2</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id19"/>
			<label kind="guard" x="-374" y="-68">x&gt;=2</label>
			<label kind="assignment" x="-374" y="-42">x=0,
lightState=1</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id20"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-289" y="-195">turnR?</label>
			<label kind="assignment" x="-289" y="-178">x=0</label>
		</transition>
		<transition color="#0000ff">
			<source ref="id16"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-697" y="-161">close!</label>
			<label kind="assignment" x="-697" y="-136">lightState=0,
x=0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id16"/>
			<label kind="guard" x="-535" y="-68">x==2</label>
			<label kind="assignment" x="-535" y="-34">x=0</label>
		</transition>
		<transition color="#0000ff">
			<source ref="id17"/>
			<target ref="id21"/>
			<label kind="guard" x="-909" y="-391">gateState==3</label>
			<label kind="synchronisation" x="-909" y="-365">close!</label>
			<label kind="assignment" x="-909" y="-348">x=0,
lightState=0</label>
			<label kind="comments" x="-1164" y="-272">After light turns Red, the gate can start to close.</label>
			<nail x="-858" y="-314"/>
		</transition>
		<transition color="#ffa500">
			<source ref="id18"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-697" y="-408">turnR?</label>
		</transition>
		<transition color="#ffa500">
			<source ref="id21"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-680" y="-289">turnG?</label>
			<label kind="assignment" x="-671" y="-272">x=0,
lightState=3</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
//Process = Template();
// List one or more processes to be composed into a system.
system Train,Gate,Control,Light;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>The model is deadlock free.
			</comment>
		</query>
		<query>
			<formula>Gate.opening --&gt; Gate.On
			</formula>
			<comment>Gates are never instructed to raise or lower in th mid-way of closing/opening
			</comment>
		</query>
		<query>
			<formula>Gate.closing--&gt; Gate.Off
			</formula>
			<comment>Gates are never instructed to raise or lower in th mid-way of closing/opening
			</comment>
		</query>
		<query>
			<formula>A[] (Light.green) imply (Gate.On or Gate.stayOn)
			</formula>
			<comment>Traffic lights are never turned green before opening gates.(On and stayOn both mean that the gate is open.)
			</comment>
		</query>
		<query>
			<formula>A[]  (Gate.Off or Gate.closing)  imply (Light.red)
			</formula>
			<comment>Traffic lights are always turned red before closing the gates.
			</comment>
		</query>
		<query>
			<formula>A[] forall(i:trainId) Train(i).Cross imply (Gate.Off or Gate.closing)
			</formula>
			<comment>Gates are never open when a train is inside crossing.
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (Light.green)
			</formula>
			<comment>Road traffic can pass through.
			</comment>
		</query>
	</queries>
</nta>
